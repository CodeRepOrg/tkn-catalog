apiVersion: tekton.dev/v1
kind: Pipeline
metadata: 
  name: artifact-pipeline
spec:
  workspaces:
    - name: shared-data
    - name: dockerconfig-ws
  params:
    - name: GIT_URL
      type: string
      description: Url of the repo
      default: https://github.com/CodeRepOrg/test-repo.git
    - name: YAML_PATH
      type: string
      description: Path to yaml file
      default: kubernetes/deployment.yaml
  tasks:
    - name: clone
      taskRef:
        resolver: hub
        params:
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: version
            value: "0.5.0"
      params:
        - name: url
          value: $(params.GIT_URL)
      workspaces:
        - name: output
          workspace: shared-data
          
    # - name: build
    #   runAfter:
    #     - clone
    #   taskRef:
    #     resolver: hub
    #     params:
    #       - name: kind
    #         value: task
    #       - name: name
    #         value: docker-build
    #       - name: version
    #         value: "0.1.0"
    #   params:
    #     - name: image
    #       value: joaopedropp/devconf-ahub
    #   workspaces:
    #     - name: source
    #       workspace: shared-data

    # - name: check
    #   runAfter:
    #     - deploy
    #   taskSpec:
    #     steps:
    #       - image: alpine
    #         script: |
    #           cat $(workspaces.source.path)/$(params.YAML_PATH)
    #   workspaces:
    #     - name: source
    #       workspace: shared-data

    - name: build
      runAfter:
        - clone
      taskRef:
        name: buildah-personal
      params:
        - name: IMAGE
          value: docker.io/joaopedropp/devconf-ahub
      workspaces:
        - name: output
          workspace: shared-data
        - name: cred
          workspace: dockerconfig-ws

    # - name: build11
    #   runAfter:
    #     - clone
    #   taskRef:
    #     resolver: git
    #     params:
    #       - name: url
    #         value: https://github.com/tektoncd/catalog.git
    #       - name: revision
    #         value: main
    #       - name: pathInRepo
    #         value: task/buildah/0.9/buildah.yaml
    #   params:
    #     # - name: BUILDER_IMAGE
    #     #   value: quay.io/buildah/stable:v1
    #     # - name: BUILDER_IMAGE
    #     #   value: quay.io/containers/buildah
    #     - name: IMAGE
    #       value: docker.io/joaopedropp/devconf-ahub
    #     - name: CONTEXT
    #       value: $(workspaces.source.path)
    #     - name: DOCKERFILE
    #       value: Dockerfile
    #     - name: SKIP_PUSH
    #       value: true
    #   workspaces:
    #     - name: source
    #       workspace: shared-data
    #     - name: sslcertdir
    #       workspace: dockerconfig-ws
        # - name: dockerconfig
        #   workspace: shared-data

    # - name: build
    #   runAfter:
    #     - clone
    #   taskSpec:
    #     steps:
    #       - image: quay.io/containers/buildah
    #         workingDir: $(workspaces.output.path)
    #         env:
    #           - name: USERNAME
    #             valueFrom:
    #               secretKeyRef:
    #                 name: container-secret
    #                 key: username
    #           - name: PASSWORD
    #             valueFrom:
    #               secretKeyRef:
    #                 name: container-secret
    #                 key: password
    #         script: |
    #           buildah build -t docker.io/joaopedropp/devconf-ahub --storage-driver=overlay -f Dockerfile .
    #           buildah login docker.io -u $USERNAME -p $PASSWORD
    #           buildah push docker.io/joaopedropp/devconf-ahub
    #   workspaces:
    #     - name: output
    #       workspace: shared-data

    - name: deploy
      runAfter:
        - build
      taskSpec:
        steps:
          - image: alpine
            name: update-yaml
            workingDir: $(workspaces.output.path)
            # script: |
            #   sed -i -e "s;__IMAGE__;docker.io/joaopedropp/devconf-ahub:latest;g" $(params.YAML_PATH)
            #   dep_path=$(workspaces.output.path)/$(params.YAML_PATH)
            #   # printf '%s' "${dep_path}" | tee "$(results.deployment_path.path)"
            #   cat "${dep_path}" | tee "$(results.deployment_path.path)"
            command:
              - "sed"
            args:
              - "-i"
              - "-e"
              - "s;__IMAGE__;docker.io/joaopedropp/devconf-ahub:latest;g"
              - "$(params.YAML_PATH)"
          - image: bitnami/kubectl
            name: k8
            workingDir: $(workspaces.output.path)
            command:
              - kubectl
            args:
              - apply
              - "-f"
              - "$(params.YAML_PATH)"
        # results:
        #   - name: deployment_path
      workspaces:
        - name: output
          workspace: shared-data

    # - name: deploy
    #   runAfter:
    #     - set-new-image
    #   taskRef:
    #     resolver: git
    #     params:
    #       - name: url
    #         value: https://github.com/tektoncd/catalog.git
    #       - name: revision
    #         value: main
    #       - name: pathInRepo
    #         value: task/kubernetes-actions/0.2/kubernetes-actions.yaml
    #   params:
    #     - name: script
    #       value: |
    #         cat $(tasks.set-new-image.results.deployment_path) | kubectl apply -f -
    #         # kubectl apply -f $(tasks.set-new-image.results.deployment_path)
